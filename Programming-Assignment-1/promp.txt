introduction
in this socket programming assignment you will create two programs using TCP sockets; these will act very simi;lar to an echo client and an eco server which repeat messages between each other. you may use whichever programming language you prefer, but i recommend python. the client/sever structure is commonly yused in network programming and this assignment is divided into those two logical componenta,
two separate computers must run the client and serve rfotr this appication. the client will send multiple messages to the server and when the client decides to quit, the server will reply with a log of all the received messages. the following two sections contain more details about the requirements for the client and server programs.

the server
the server must behave as follows:
1. the port numvber to use for communication must be provided to the server as either a command line argument or as keyboard (stdn) input from the user.
2. the server must output its IP address and the port number it is using to the screen (stdou). The server li stens on the specified port for a connection from the client; please use ports between 10000 and 20000 while testing to avoid conflicts with other network services.
3. once the client connects to the server, the server must accept the connection and print the clients IP address to the screen (stdout)
4. once the connection is made, the server must read the transmitted messages from the client and output the messages to the ascreen (stdout)
5/. if the client sends a mesaage of "quit", then the server must read this transmitted message and detect this, output that the client is quitting to the screen (stdout), and send all prior messages revceived from the clent back to the client; basically, the server sends a log of all prior messages. Once the server transmits this, the program will end.
6.  the server program must be run first, before the client, so that it is active for the client to connect to. the server's input output should look something like this:

% echo server 12345
server is at address: 192.168.1.3
server is using port: 12345
server connected to client at address: 192.168.1.4
server received message: "This is my first message"
server received message: "And now my second message"
server received message: "this is my last message"
the client had informed the server that it is quitting

the client 
the client must behave as follows:
1. the server's ID address and port number to use for communication must be provided to the client as either a command line argument or as a keyboard (stdin) input from the user.
2. the client must create a connection to the server and output the connection status to the screen(stdout) 
3. the client must request a message from the user using the keyboard (stdin). the message mus then be sent to the server and client must output that it has sent the message to the server (stout) 
4. Repeat the previous step until the user tries to send "quit" as a message. when this occurs, send "quit" to the server and then prepare to read data back from the server. 
5 the client must read what will be a log of all prior messages to the server. This message log must then be output to the screen (stdout) and then this program will end.
6. the client input/out should look something like this:

%echo client 192.168.1.3 12345
client had connected to the server!
enter a message to send to server: "This is my first message"
client sending message: "This is my first message"
enter message to send to server: "And now my second message"
client sending message: "And now my second message"
enter message to send to server: "this is my last message"
client sending message: "this is my last message"
enter message to send to server: "quit"
client informing server that it is quitting.
client receuved mesaage log. 
this is my first message.
and now my second message
this is my last message

error conditions 
while you do not need to show error conditions when demonstrating the operation of your client and server,, you must check for these error conditions in your code.

questions

